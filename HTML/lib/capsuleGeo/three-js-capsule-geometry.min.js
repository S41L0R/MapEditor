!(function(t, e) {
"object" == typeof exports && "undefined" != typeof module
? (module.exports = e(require("three-full/builds/Three.cjs.js")))
: "function" == typeof define && define.amd
? define(["three-full/builds/Three.cjs.js"], e)
: (t.THREECapsuleBufferGeometry = e(t.THREE));
})(this, function(t) {
"use strict";
function e(e, r, o, a, s, h, i, u, f) {
t.BufferGeometry.call(this),
(this.type = "CapsuleBufferGeometry"),
(this.parameters = {
radiusTop: e,
radiusBottom: r,
height: o,
radialSegments: a,
heightSegments: s,
thetaStart: u,
thetaLength: f
}),
(e = void 0 !== e ? e : 1),
(r = void 0 !== r ? r : 1),
(o = void 0 !== o ? o : 2),
(a = Math.floor(a) || 8),
(s = Math.floor(s) || 1),
(h = Math.floor(h) || 2),
(i = Math.floor(i) || 2),
(u = void 0 !== u ? u : 0),
(f = void 0 !== f ? f : 2 * Math.PI);
var n = Math.acos((r - e) / o),
d = (a + 1) * (s + 1 + i + h),
y = a * (s + i + h) * 2 * 3,
l = new t.BufferAttribute(new (y > 65535 ? Uint32Array : Uint16Array)(y), 1),
c = new t.BufferAttribute(new Float32Array(3 * d), 3),
p = new t.BufferAttribute(new Float32Array(3 * d), 3),
M = new t.BufferAttribute(new Float32Array(2 * d), 2),
v = 0,
X = 0,
m = [],
w = o / 2;
!(function() {
var d,
y,
b = new t.Vector3(),
x = new t.Vector3(),
A = Math.cos(n),
z = Math.sin(n),
B = new t.Vector2(e * z, w + e * A)
.sub(new t.Vector2(r * z, r * A - w))
.length(),
Y = e * n + B + r * (Math.PI / 2 - n),
g = 0;
for (y = 0; y <= h; y++) {
var j = [],
I = Math.PI / 2 - n * (y / h);
g += (e * n) / h;
var P = Math.cos(I),
Z = Math.sin(I),
G = P * e;
for (d = 0; d <= a; d++) {
var T = d / a,
E = T * f + u,
V = Math.sin(E),
C = Math.cos(E);
(x.x = G * V),
(x.y = w + Z * e),
(x.z = G * C),
c.setXYZ(v, x.x, x.y, x.z),
b.set(P * V, Z, P * C),
p.setXYZ(v, b.x, b.y, b.z),
M.setXY(v, T, 1 - g / Y),
j.push(v),
v++;
}
m.push(j);
}
var F = o + A * e - A * r,
S = (z * (r - e)) / F;
for (y = 1; y <= s; y++) {
var j = [];
g += B / s;
var G = z * ((y * (r - e)) / s + e);
for (d = 0; d <= a; d++) {
var T = d / a,
E = T * f + u,
V = Math.sin(E),
C = Math.cos(E);
(x.x = G * V),
(x.y = w + A * e - (y * F) / s),
(x.z = G * C),
c.setXYZ(v, x.x, x.y, x.z),
b.set(V, S, C).normalize(),
p.setXYZ(v, b.x, b.y, b.z),
M.setXY(v, T, 1 - g / Y),
j.push(v),
v++;
}
m.push(j);
}
for (y = 1; y <= i; y++) {
var j = [],
I = Math.PI / 2 - n - (Math.PI - n) * (y / i);
g += (r * n) / i;
var P = Math.cos(I),
Z = Math.sin(I),
G = P * r;
for (d = 0; d <= a; d++) {
var T = d / a,
E = T * f + u,
V = Math.sin(E),
C = Math.cos(E);
(x.x = G * V),
(x.y = Z * r - w),
(x.z = G * C),
c.setXYZ(v, x.x, x.y, x.z),
b.set(P * V, Z, P * C),
p.setXYZ(v, b.x, b.y, b.z),
M.setXY(v, T, 1 - g / Y),
j.push(v),
v++;
}
m.push(j);
}
for (d = 0; d < a; d++)
for (y = 0; y < h + s + i; y++) {
var H = m[y][d],
O = m[y + 1][d],
R = m[y + 1][d + 1],
U = m[y][d + 1];
l.setX(X, H),
X++,
l.setX(X, O),
X++,
l.setX(X, U),
X++,
l.setX(X, O),
X++,
l.setX(X, R),
X++,
l.setX(X, U),
X++;
}
})(),
this.setIndex(l),
this.addAttribute("position", c),
this.addAttribute("normal", p),
this.addAttribute("uv", M);
}
(t = t && t.hasOwnProperty("default") ? t.default : t),
(e.prototype = Object.create(t.BufferGeometry.prototype)),
(e.prototype.constructor = e);
var r = e;
return (t.CapsuleBufferGeometry = r), r;
});
